import openpyxl
from operator import itemgetter

path = 'result6th.xlsx'
wb_obj = openpyxl.load_workbook(path)
sheet_obj = wb_obj.active
analysis = []
headers = ["GRADE"]
rslt = []
allSub = []
Subj = []
SUBJ = []
avgrd = ["Avg"]
grads = ["A+", "A", "B+", "B", "C+", "C", "D", "F", "I", "W"]

max_row = sheet_obj.max_row
max_column = sheet_obj.max_column


def getData():

    #taking all subject grades in allSub variable as list of list
    for j in range(7, 14):
        Subj = []
        for i in range(2, max_row + 1):
            cell_obj = sheet_obj.cell(row=i, column=j)
            Subj.append(cell_obj.value)
        allSub.append(Subj)

    #replacing "F (ABS)" to 'F'
    for i, x in enumerate(allSub):
         for j, a in enumerate(x):
            if 'F (ABS)' in a:
                allSub[i][j] = a.replace('F (ABS)', 'F')

    print("gotdata")
    data = analyse()
    appnd(data)


def analyse():
         
    #counting grades 
    print(len(allSub))
    for i in allSub:
        SUBJ = []       
        for grd in grads:
            SUBJ.append(i.count(grd))
        rslt.append(SUBJ)
    
    #making new list of list with indexed values of list...list of 1st's 1st and 2nd's 2nd...    
    for i in range(10):
        analysis.append(list(map(itemgetter(i), rslt)))
    return analysis


def appnd(data):
    
    
    #retrieving headers from excel
    for i in range(7, max_column + 1):
        cell_obj = sheet_obj.cell(row=1, column=i)
        headers.append(cell_obj.value)
    wb_obj.save(path)
    
    # sheet_obj.append(avgrd)
    
    #inserting headers 
    r=2
    colmn=16
    for row in headers:
        sheet_obj.cell(row=r, column=colmn).value = row
        colmn+=1

    #inserting grades 
    r=3
    colmn=16    
    for row in grads:
        sheet_obj.cell(row=r, column=colmn).value = row
        r+=1
        
    #inserting data  
    r = 3
    for innerlist in data: 
        colmn=17
        for row in innerlist:
           sheet_obj.cell(row=r, column=colmn).value = row
           colmn+=1
        r+= 1
    
    
    wb_obj.save(path)
    print("data saved")


if __name__ == '__main__':
    getData()
